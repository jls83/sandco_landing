---
- hosts: production
  become: true
  vars:
    app_name: sandco_landing
    image_name: sandco_landing_image
    port_number: 3400
    ufw_nginx_alias: Nginx HTTP
    hugo_source_dir: "/home/jls83/{{ app_name }}"
    hugo_destination_dir: "{{ hugo_source_dir }}/public"
    git_repo_url: "https://github.com/jls83/{{ app_name }}.git"
    nginx_config_source: "ansible/templates/{{ app_name }}.conf"
    nginx_config_dest: "/etc/nginx/sites-available/{{ app_name }}.conf"
  environment:
      PYTHONPATH: "{{ lookup('env','PYTHONPATH') }}:/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python2.7/site-packages"
  tasks:
    - name: Update apt
      apt: update_cache=yes

    # Python steps
    - name: Install Pip
      apt:
        state: latest
        name: python-pip

    - name: Install pip packages
      pip:
        name:
          - docker
          - requests>=2.20.1

    # Nginx steps (part 1)
    - name: Install Nginx
      apt:
        name: nginx

    # UFW steps
    - name: Allow Nginx for UFW
      ufw:
        rule: allow
        name: "Nginx HTTP"

    # Git steps
    - name: Create directory
      file:
        path: "{{ hugo_source_dir }}"
        state: directory
      ignore_errors: true
      become: false

    - name: Pull down repo from Github
      git:
        repo: "{{  git_repo_url  }}"
        dest: "{{ hugo_source_dir }}"

    # Hugo steps
    - name: Install hugo
      command: snap install hugo
      become: false

    - name: Create destination directory
      file:
        path: "{{ hugo_destination_dir }}"
        state: directory
      become: false

      # TODO: Add minify later!
    - name: Build hugo site
      command: snap run hugo -s {{ hugo_source_dir }} -d {{ hugo_destination_dir }}
      become: false

    # Nginx steps (part 2)
    - name: Copy Nginx config file
      template:
        src: "{{ nginx_config_source }}"
        dest: "{{ nginx_config_dest }}"

    - name: Create Nginx symlink
      file:
        src: "{{ nginx_config_dest }}"
        dest: /etc/nginx/sites-enabled/{{ app_name }}.conf
        state: link

    # Docker steps
    - name: Stop all `sandco_landing` containers
      docker_container:
        name: "{{ app_name }}"
        image: "{{ image_name }}"
        state: stopped

    - name: Build Docker image
      docker_image:
        path: "{{ hugo_source_dir }}"
        name: "{{ image_name }}"
        # tag: latest
        push: no

    - name: Run Docker container, restart Nginx
      docker_container:
        name: "{{ app_name }}"
        image: "{{ image_name }}"
        state: started
        ports: "{{ port_number }}:80"
      notify: restart nginx
  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

