---
- hosts: production
  become: true
  vars:
    image_name: sandco_landing
    port_number: 3400
    ufw_nginx_alias: Nginx HTTP
    hugo_source_dir: /home/jls83/sandco_landing
    hugo_destination_dir: /home/jls83/sandco_landing_public
    git_repo_url: https://github.com/jls83/sandco_landing.git
    nginx_config_source: "ansible/templates/{{ image_name }}.conf"
    nginx_config_dest: "/etc/nginx/sites-available/{{ image_name }}.conf"
  tasks:
    - name: Update apt
      apt: update_cache=yes

    # Nginx steps (part 1)
    - name: Install Nginx
      apt:
        name: nginx

    # UFW steps
    - name: Allow Nginx for UFW
      ufw:
        rule: allow
        name: "Nginx HTTP"

    # Git steps
    - name: Create directory
      file:
        path: "{{ hugo_source_dir }}"
        state: directory
      ignore_errors: true
      become: false

    - name: Pull down repo from Github
      git:
        repo: "{{  git_repo_url  }}"
        dest: "{{ hugo_source_dir }}"

    # Hugo steps
    - name: Install hugo
      command: snap install hugo
      become: false

    - name: Create destination directory
      file:
        path: "{{ hugo_destination_dir }}"
        state: directory
      become: false

      # TODO: Add minify later!
    - name: Build hugo site
      command: snap run hugo -s {{ hugo_source_dir }} -d {{ hugo_destination_dir }}
      become: false

    # Nginx steps (part 2)
    - name: Copy Nginx config file
      template:
        src: "{{ nginx_config_source }}"
        dest: "{{ nginx_config_dest }}"

    - name: Create Nginx symlink
      file:
        src: "{{ nginx_config_dest }}"
        dest: /etc/nginx/sites-enabled/{{ image_name }}.conf
        state: link

    # Docker steps
    #
    #    - name: Check for running `sandco_landing` Docker containers
    #      register: docker_container_count
    #      shell: "docker ps --filter ancestor={{ image_name }} -a -q | wc -l"
    #
    #    - name: Stop all `sandco_landing` related Docker containers (if any)
    #      when: docker_container_count != "0"
    #      shell: "docker stop $(docker ps --filter ancestor={{ image_name }} -a -q)"
    #
    - name: Stop all `sandco_landing` containers
      docker_container:
        name: *
        image: "{{ image_name }}"
        state: stopped

    - name: Build Docker image
      command: docker build . -t {{ image_name }}

    - name: Run Docker container, restart Nginx
      command: docker run -d -p {{ port_number }}:80 {{ image_name }}
      notify: restart nginx
  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

